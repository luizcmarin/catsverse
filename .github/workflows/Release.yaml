name: Create GitHub Release with APK

on:
  workflow_dispatch: # Permite disparo manual
  push:
    tags:
      - 'v*' # Dispara em tags como v1.0, v1.0.1

jobs:
  build_and_release_app:
    name: "Build and Release App APK (Unsigned)"
    if: github.repository == 'luizcmarin/catsverse'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: write # Para criar release e fazer upload de assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }} # REMOVIDO PARA SIMPLICIDADE POR ENQUANTO
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      # --- Seção de Assinatura do APK (Comentada para Desenvolvimento) ---
      #      - name: Decode Keystore
      #        if: ${{ secrets.SIGNING_KEYSTORE_BASE64 != '' && secrets.SIGNING_KEYSTORE_BASE64 != null }}
      #        env:
      #          SIGNING_KEYSTORE_BASE64_SECRET: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
      #          KEYSTORE_PATH_ENV: "${{ github.workspace }}/release-catsverse.jks"
      #        run: |
      #          echo "Decoding keystore..."
      #          echo $SIGNING_KEYSTORE_BASE64_SECRET | base64 --decode > $KEYSTORE_PATH_ENV
      #          echo "SIGNING_STORE_FILE_PATH_OUTPUT=$KEYSTORE_PATH_ENV" >> $GITHUB_ENV
      #          echo "Keystore decoded to $KEYSTORE_PATH_ENV"
      #
      #      - name: Set Signing Environment Variables for Gradle
      #        if: ${{ secrets.SIGNING_KEYSTORE_BASE64 != '' && secrets.SIGNING_KEYSTORE_BASE64 != null }}
      #        env:
      #          KEY_ALIAS_SECRET: ${{ secrets.SIGNING_KEY_ALIAS }}
      #          KEY_PASSWORD_SECRET: ${{ secrets.SIGNING_KEY_PASSWORD }}
      #          STORE_PASSWORD_SECRET: ${{ secrets.SIGNING_STORE_PASSWORD }}
      #        run: |
      #          echo "Setting signing environment variables for Gradle..."
      #          echo "CATSVERSE_RELEASE_STORE_FILE=${{ env.SIGNING_STORE_FILE_PATH_OUTPUT }}" >> $GITHUB_ENV
      #          echo "CATSVERSE_RELEASE_STORE_PASSWORD=${STORE_PASSWORD_SECRET}" >> $GITHUB_ENV
      #          echo "CATSVERSE_RELEASE_KEY_ALIAS=${KEY_ALIAS_SECRET}" >> $GITHUB_ENV
      #          echo "CATSVERSE_RELEASE_KEY_PASSWORD=${KEY_PASSWORD_SECRET}" >> $GITHUB_ENV
      #          echo "Signing environment variables set."
      # --- Fim da Seção de Assinatura (Comentada) ---

      - name: Build Release APK for :app
        # Esta tarefa construirá um APK de release.
        # Como as etapas de assinatura estão comentadas, será um APK NÃO ASSINADO
        # a menos que seu build.gradle esteja configurado para assinar de outra forma (ex: debug key).
        run: ./gradlew :app:assembleRelease

      - name: Get Release Notes (Optional)
        id: release_notes
        run: |
          echo "body=Development build for tag ${{ github.ref_name }}. APK is NOT signed by CI." >> $GITHUB_OUTPUT

      - name: Create GitHub Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }} (Development Build - Unsigned)"
          body: ${{ steps.release_notes.outputs.body }}
          draft: true
          prerelease: true # Marcado como pré-release, já que não é um build de produção final

      - name: Upload Unsigned Release APK to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: catsverse-${{ github.ref_name }}-unsigned.apk # Nome indicando não assinado
          asset_content_type: application/vnd.android.package-archive

