name: Build Android App

# Permissões necessárias para as ações de segurança e análise
permissions:
  contents: read
  actions: read
  security-events: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: "Build, Local Tests, and Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      security-events: write # Para upload SARIF

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Sugestão de melhoria: Limpar espaço em disco no início do job
      - name: Limpar ferramentas desnecessárias
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          dotnet: true
          android: true # Deixe essa opção se você também faz build/teste de instrumentação aqui
          haskell: true
          swap-storage: true

      - name: Copiar CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Configurar Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Dar permissão de execução ao gradlew
        run: chmod +x ./gradlew

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Configurar Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34

      - name: Executar testes unitários locais do :app
        run: ./gradlew :app:testDebugUnitTest

      - name: Gerar APKs do :app (debug e release)
        run: ./gradlew :app:assembleDebug :app:assembleRelease

      - name: Fazer o upload dos APKs do :app
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-apks
          path: 'app/build/outputs/apk/**/*.apk'

      - name: Fazer o upload dos resultados dos testes JVM do :app (XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-local-test-results
          path: 'app/build/test-results/test*UnitTest/**/*.xml'

      - name: Executar o Lint para gerar o relatório SARIF
        run: ./gradlew :app:lintRelease

      - name: Enviar os resultados do Lint para o Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: app/build/reports/lint-results-release.sarif

      - name: Fazer o upload dos relatórios do Lint (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-lint-reports-html
          path: 'app/build/reports/lint-results-*.html'

  android_instrumentation_tests:
    name: "Testes de Instrumentação Android para :app"
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [29, 34]

    steps:
      # Sugestão de melhoria: Limpar espaço em disco no início do job
      - name: Limpar ferramentas desnecessárias
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false
          tool-cache: true
          dotnet: true
          haskell: true
          swap-storage: true

      - name: Habilitar permissões do grupo KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copiar CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Configurar Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Rodar testes de instrumentação do :app
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew :app:connectedDebugAndroidTest --daemon

      - name: Fazer o upload dos relatórios de teste de instrumentação do :app
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-instrumentation-test-reports-${{ matrix.api-level }}
          path: 'app/build/reports/androidTests/connected'
