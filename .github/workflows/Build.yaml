name: Build Android App

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: "Build, Local Tests, and Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: write # Para git-auto-commit-action (Dependency Guard, Roborazzi)
      pull-requests: write # Para o relatÃ³rio JaCoCo (se vocÃª adicionar)
      security-events: write # Para upload SARIF

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }} # REMOVIDO PARA SIMPLICIDADE POR ENQUANTO
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Check spotless
        run: ./gradlew :app:spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache

      - name: Check Dependency Guard for :app module
        id: dependencyguard_verify
        continue-on-error: true
        run: ./gradlew :app:dependencyGuard

      - name: Prevent updating Dependency Guard baselines if this is a fork
        if: steps.dependencyguard_verify.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Dependency Guard failed for :app, please update baselines with: ./gradlew :app:dependencyGuardBaseline" && exit 1

      - name: Generate new Dependency Guard baselines if verification failed and it's a PR
        id: dependencyguard_baseline
        if: steps.dependencyguard_verify.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./gradlew :app:dependencyGuardBaseline

      - name: Push new Dependency Guard baselines if available
        uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.dependencyguard_baseline.outcome == 'success'
        with:
          file_pattern: 'app/dependencies/*.txt'
          disable_globbing: true
          commit_message: "ðŸ¤– Updates baselines for Dependency Guard (:app)"

      # Se vocÃª usa Roborazzi para testes de screenshot no mÃ³dulo :app
      - name: Run :app local screenshot tests (Roborazzi)
        id: screenshotsverify
        continue-on-error: true
        run: ./gradlew :app:verifyRoborazziDebug # Adapte para seu variant de teste (ex: verifyRoborazziDebug)

      - name: Prevent pushing new screenshots if this is a fork
        if: steps.screenshotsverify.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Screenshot tests failed for :app, please create a PR in your fork first."
          exit 1

      - name: Generate new screenshots if verification failed and it's a PR
        id: screenshotsrecord
        if: steps.screenshotsverify.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./gradlew :app:recordRoborazziDebug # Adapte para seu variant de teste (ex: recordRoborazziDebug)

      - name: Push new screenshots if available
        uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.screenshotsrecord.outcome == 'success'
        with:
          file_pattern: 'app/src/**/roborazzi/**/*.png' # Ajuste para o local dos seus screenshots de referÃªncia
          commit_message: "ðŸ¤– Updates screenshots for :app"

      - name: Run :app local unit tests
        run: ./gradlew :app:testDebugUnitTest

      - name: Build :app APKs (debug and release)
        run: ./gradlew :app:assembleDebug :app:assembleRelease

      - name: Upload :app build outputs (APKs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-apks
          path: 'app/build/outputs/apk/**/*.apk'

      - name: Upload :app JVM local test results (XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-local-test-results
          path: 'app/build/test-results/test*UnitTest/**/*.xml'

      - name: Upload :app screenshot test results (PNG)
        if: always() && steps.screenshotsverify.outcome != 'skipped'
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshot-test-results
          path: 'app/build/outputs/roborazzi/*_compare.png' # Ajuste para o local dos seus resultados de comparaÃ§Ã£o

      - name: Check :app lint
        run: ./gradlew :app:lintRelease

      - name: Upload :app lint reports (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-lint-reports-html
          path: 'app/build/reports/lint-results-*.html'

      - name: Upload :app lint reports (SARIF)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: app/build/reports/lint-results-release.sarif # Verifique o nome exato do arquivo
          category: app-lint
          checkout_path: ${{ github.workspace }}

  android_instrumentation_tests:
    name: "Android Instrumentation Tests for :app"
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [29, 34] # MinSDK e um mais recente, ajuste conforme necessÃ¡rio

    steps:
      - name: Delete unnecessary tools
        uses: jlumbroso/free-disk-space@v1.3.1
        with: { android: false, tool-cache: true, dotnet: true, haskell: true, swap-storage: true }

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with: { distribution: 'zulu', java-version: 21 }

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }} # REMOVIDO PARA SIMPLICIDADE POR ENQUANTO
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Run :app instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew :app:connectedDebugAndroidTest --daemon

      - name: Upload :app instrumentation test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-instrumentation-test-reports-${{ matrix.api-level }}
          path: 'app/build/reports/androidTests/connected'


